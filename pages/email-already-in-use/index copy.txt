import React, { useEffect } from 'react';
import Image from 'next/image';
import loginLayoutStyles from '@/styles/layouts/Login.module.scss';
import { Formik } from 'formik';
import Head from 'next/head';
import Link from 'next/link';
import textInputStyles from '@/styles/components/TextInput.module.scss';
import textLinkStyles from '@/styles/components/TextLink.module.scss';
import clsx from 'clsx';
import authFormStyles from '@/styles/components/AuthForm.module.scss';
import AuthButton from '@/components/common/AuthButton';
// import { Input, useToast } from '@chakra-ui/react';
import { useAPIRefreshPassword } from '@/hooks/api/auth/useAPIRefreshPassword';
import { useAuthenticate } from '../../contexts/useAuthenticate';
import { useRouter } from 'next/router';

const ForgotPassword: React.FC = () => {
  const router = useRouter();
  const { submitPasswordResetEmail, currentUserInfo } = useAuthenticate();

  useEffect(() => {
    // get email from local storage
  }, []);

  return (
    <div className={loginLayoutStyles.screen_wrapper}>
      <Head>
        <title>ボールド | パスワード再発行</title>
      </Head>
      {/* <div className={loginLayoutStyles.logo_image}>
        <Image src={boldLogo} alt="bold logo" />
      </div> */}
      <Formik
        initialValues={{ email: '' }}
        onSubmit={(values) => {
          if (currentUserInfo?.email) {
            submitPasswordResetEmail(currentUserInfo?.email);
          }
        }}>
        {({ values, handleChange, handleSubmit, errors }) => (
          <div className={authFormStyles.login_form}>
            <p className={clsx(authFormStyles.form_margin)}>
              {
                'このメールアドレスは既に使用されています。\n'
                // 'このメールアドレスは既に使用されています。\n認証用メールを再送信しますか？'
              }
            </p>
            {/* <p className={authFormStyles.validation_error_text}>
              {errors.email}
            </p>
            <button />
            <AuthButton
              name="認証用メールを再送信"
              isActive={true}
              onClick={() => handleSubmit()}
            /> */}
            <p className={authFormStyles.form_margin} />
            <p className={authFormStyles.form_margin}>
              <Link href="/login" legacyBehavior>
                <a className={textLinkStyles.link}>ログイン画面へ</a>
              </Link>
            </p>
            <p className={authFormStyles.form_margin}>
              アカウントが未登録ですか？
              <Link href="/register" passHref legacyBehavior>
                <a className={textLinkStyles.link}>サインアップ</a>
              </Link>
            </p>
          </div>
        )}
      </Formik>
    </div>
  );
};

export default ForgotPassword;
